{"version":3,"sources":["components/Carousel.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","step","frameSize","animationDuration","infinite","useState","currentIndex","setCurrentIndex","isLeftArrowEnabled","isRightArrowEnabled","length","frameWidth","itemTransform","className","type","onClick","state","lastItemPosition","prevItemPosition","disabled","style","width","map","img","index","transition","transform","src","alt","height","nexItemPosition","Form","onChangeWidth","onStepChange","onFrameChange","onDurationChange","onInfiniteChange","imagesLength","min","value","onChange","max","initialState","App","changeItemWidth","event","target","setState","changeStep","changeFrameSize","size","changeAnimationDuration","duration","changeInfinite","checked","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.030e7b35.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  step: number;\n  frameSize: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  step,\n  frameSize,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const handleNextClick = () => {\n    setCurrentIndex(state => {\n      const lastItemPosition = images.length - frameSize;\n      const nexItemPosition = state + step;\n\n      if (state === lastItemPosition) {\n        return 0;\n      }\n\n      if (nexItemPosition > lastItemPosition) {\n        return lastItemPosition;\n      }\n\n      return nexItemPosition;\n    });\n  };\n\n  const handlePrevClick = () => {\n    setCurrentIndex(state => {\n      const lastItemPosition = images.length - frameSize;\n      const prevItemPosition = state - step;\n\n      if (state === 0) {\n        return lastItemPosition;\n      }\n\n      if (prevItemPosition < 0) {\n        return 0;\n      }\n\n      return prevItemPosition;\n    });\n  };\n\n  const isLeftArrowEnabled = currentIndex > 0 || infinite;\n  const isRightArrowEnabled = currentIndex < images.length - frameSize\n  || infinite;\n\n  const frameWidth = frameSize * itemWidth;\n  const itemTransform = currentIndex * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        className=\"Carousel__button\"\n        type=\"button\"\n        onClick={handlePrevClick}\n        disabled={!isLeftArrowEnabled}\n      >\n        {'<'}\n      </button>\n\n      <div\n        className=\"Carousel__list-container\"\n        style={{\n          width: `${frameWidth}px`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={img}\n              style={{\n                transition: `${animationDuration}ms`,\n                transform: `translate(-${itemTransform}px)`,\n              }}\n            >\n              <img\n                className=\"Carousel__image\"\n                src={img}\n                alt={`${index + 1}`}\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        data-cy=\"next\"\n        className=\"Carousel__button\"\n        type=\"button\"\n        onClick={handleNextClick}\n        disabled={!isRightArrowEnabled}\n      >\n        {'>'}\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Form.scss';\n\nexport const INITIAL_ITEM_WIDTH = 130;\n\ntype Props = {\n  itemWidth: number;\n  onChangeWidth: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  step: number;\n  onStepChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  frameSize: number;\n  onFrameChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  animationDuration: number;\n  onDurationChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onInfiniteChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  imagesLength: number;\n};\n\nexport const Form: React.FC<Props> = ({\n  itemWidth,\n  onChangeWidth,\n  step,\n  onStepChange,\n  frameSize,\n  onFrameChange,\n  animationDuration,\n  onDurationChange,\n  onInfiniteChange,\n  imagesLength,\n}) => {\n  return (\n    <div className=\"Form\">\n      <label className=\"Form__label\">\n        Image size:\n        <input\n          className=\"Form__input\"\n          type=\"number\"\n          step=\"10\"\n          min={INITIAL_ITEM_WIDTH}\n          value={itemWidth}\n          onChange={onChangeWidth}\n        />\n      </label>\n\n      <label className=\"Form__label\">\n        Step:\n        <input\n          className=\"Form__input\"\n          type=\"number\"\n          min=\"1\"\n          max=\"5\"\n          value={step}\n          onChange={onStepChange}\n        />\n      </label>\n\n      <label className=\"Form__label\">\n        How many images are seen:\n        <input\n          className=\"Form__input\"\n          type=\"number\"\n          min=\"1\"\n          max={imagesLength}\n          value={frameSize}\n          onChange={onFrameChange}\n        />\n      </label>\n\n      <label className=\"Form__label\">\n        Duration of animation:\n        <input\n          className=\"Form__input\"\n          type=\"number\"\n          min=\"0\"\n          max=\"10000\"\n          step=\"100\"\n          value={animationDuration}\n          onChange={onDurationChange}\n        />\n      </label>\n\n      <label className=\"Form__label\">\n        Infinite:\n        <input\n          className=\"Form__input\"\n          type=\"checkbox\"\n          onChange={onInfiniteChange}\n        />\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Form, INITIAL_ITEM_WIDTH } from './components/Form';\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nconst initialImages: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst initialState: State = {\n  images: [...initialImages],\n  itemWidth: 130,\n  step: 3,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nclass App extends React.Component<{}, State> {\n  readonly state = {\n    ...initialState,\n  };\n\n  changeItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const width = +event.target.value;\n\n    if (+width >= INITIAL_ITEM_WIDTH) {\n      this.setState({ itemWidth: width });\n    }\n  };\n\n  changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const step = +event.target.value;\n\n    if (step > 0) {\n      this.setState({ step });\n    }\n  };\n\n  changeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const size = +event.target.value;\n\n    if (size > 0) {\n      this.setState({ frameSize: size });\n    }\n  };\n\n  changeAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const duration = +event.target.value;\n\n    if (duration > 0) {\n      this.setState({ animationDuration: duration });\n    }\n  };\n\n  changeInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          step={step}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          itemWidth={itemWidth}\n          onChangeWidth={this.changeItemWidth}\n          step={step}\n          onStepChange={this.changeStep}\n          frameSize={frameSize}\n          onFrameChange={this.changeFrameSize}\n          animationDuration={animationDuration}\n          onDurationChange={this.changeAnimationDuration}\n          onInfiniteChange={this.changeInfinite}\n          imagesLength={images.length}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}